package tp.puissance4;

import java.util.Random;
import java.util.Scanner;
import tp.puissance4.Joueur;
import tp.puissance4.PlateauDeJeu;
import tp.puissance4.cellule_graph;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Elisa
 */
public class FenetreDeJeu extends javax.swing.JFrame {

    private Joueur listeJoueurs[] = new Joueur[2];
    private Joueur joueurCourant;
    private PlateauDeJeu plateau = new PlateauDeJeu();

    /**
     * Creates new form FenetreDeJeu
     */
    public FenetreDeJeu() {
        initComponents();
        panneau_info_joueur.setVisible(false);
        panneau_info_partie.setVisible(false);

        for (int i = 5; i >= 0; i--) {
            for (int j = 0; j < 7; j++) {
                cellule_graph cellGraph = new cellule_graph(plateau.grille[i][j]);
                cellGraph.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        CelluleDeGrille c = cellGraph.celluleAssocie;
                        if (c.jetonCourant == null) {
                            return;
                        }
                        if (c.jetonCourant.couleur.equals(joueurCourant.couleur)) {
                            msg.setText(" Le joueur " + joueurCourant.nom + " récupère un de ses jetons");
                            jeton jrecup = c.recupererJeton();
                            joueurCourant.ajouterJeton(jrecup);
                            JoueurSuivant();
                        } else {
                            if (joueurCourant.nbDesintegrateur() > 0) {
                                msg.setText(" Le joueur " + joueurCourant.nom + " veut désintégrer un jeton");
                                c.supprimerJeton();
                                joueurCourant.utiliserDesintegrateur();
                                JoueurSuivant();

                            } else {
                                return;
                            }
                        }
                        plateau.tasserGrille();
                        panneau_grille.repaint();
                        lb_J1_nbDesint.setText(listeJoueurs[0].nbDesintegrateur() + "");
                        lb_J2_nbdesint.setText(listeJoueurs[1].nbDesintegrateur() + "");

                        boolean vict_J1 = plateau.etreGagnantePourCouleur(listeJoueurs[0].lireCouleur());
                        boolean vict_J2 = plateau.etreGagnantePourCouleur(listeJoueurs[1].lireCouleur());
                        if (vict_J1 == true && vict_J2 == false) {
                            msg.setText("Victoire de " + listeJoueurs[0].nom);
                        }
                        if (vict_J1 == false && vict_J2 == true) {
                            msg.setText("Victoire de " + listeJoueurs[1].nom);
                        }
                        if (vict_J1 == true && vict_J2 == true) {
                            if (joueurCourant == listeJoueurs[0]) {
                                msg.setText("Victoire de " + listeJoueurs[1].nom + ", (faute de jeu de l'autre joueur)");
                            } else {
                                msg.setText("Victoire de " + listeJoueurs[0].nom + ", (faute de jeu de l'autre joueur)");
                            }
                        }

                    }
                });
                panneau_grille.add(cellGraph);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneau_grille = new javax.swing.JPanel();
        panneau_creation_partie = new javax.swing.JPanel();
        nom_joueur1 = new javax.swing.JLabel();
        nom_joueur2 = new javax.swing.JLabel();
        saisie_nomJ1 = new javax.swing.JTextField();
        saisie_nomJ2 = new javax.swing.JTextField();
        boutton_demarrer_partie = new javax.swing.JButton();
        panneau_info_joueur = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lb_J1_nom = new javax.swing.JLabel();
        jl_J1_couleur = new javax.swing.JLabel();
        lb_J1_nbDesint = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lb_J2_nom = new javax.swing.JLabel();
        lb_J2_couleur = new javax.swing.JLabel();
        lb_J2_nbdesint = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panneau_info_partie = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lb_Jcourant = new javax.swing.JLabel();
        message = new javax.swing.JScrollPane();
        msg = new javax.swing.JTextArea();
        butt_C0 = new javax.swing.JButton();
        butt_C1 = new javax.swing.JButton();
        butt_C2 = new javax.swing.JButton();
        butt_C3 = new javax.swing.JButton();
        butt_C4 = new javax.swing.JButton();
        butt_C5 = new javax.swing.JButton();
        butt_C6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panneau_grille.setBackground(new java.awt.Color(204, 204, 204));
        panneau_grille.setLayout(new java.awt.GridLayout(6, 7));
        getContentPane().add(panneau_grille, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 672, 576));

        panneau_creation_partie.setBackground(new java.awt.Color(0, 153, 153));
        panneau_creation_partie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nom_joueur1.setText("Nom Joueur 1 :");
        panneau_creation_partie.add(nom_joueur1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        nom_joueur2.setText("Nom Joueur 2 :");
        panneau_creation_partie.add(nom_joueur2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        saisie_nomJ1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saisie_nomJ1ActionPerformed(evt);
            }
        });
        panneau_creation_partie.add(saisie_nomJ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 170, -1));

        saisie_nomJ2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saisie_nomJ2ActionPerformed(evt);
            }
        });
        panneau_creation_partie.add(saisie_nomJ2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 170, -1));

        boutton_demarrer_partie.setText("Démarrer partie");
        boutton_demarrer_partie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutton_demarrer_partieActionPerformed(evt);
            }
        });
        panneau_creation_partie.add(boutton_demarrer_partie, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        getContentPane().add(panneau_creation_partie, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 60, 320, 140));

        panneau_info_joueur.setBackground(new java.awt.Color(0, 153, 153));
        panneau_info_joueur.setForeground(new java.awt.Color(255, 255, 255));
        panneau_info_joueur.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Joueur 1 : ");
        panneau_info_joueur.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Couleur :");
        panneau_info_joueur.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setText("Désintégrateurs : ");
        panneau_info_joueur.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        lb_J1_nom.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lb_J1_nom.setText("Nomjoueur1");
        panneau_info_joueur.add(lb_J1_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        jl_J1_couleur.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jl_J1_couleur.setText("CouleurJoeur1");
        panneau_info_joueur.add(jl_J1_couleur, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        lb_J1_nbDesint.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lb_J1_nbDesint.setText("nbdesintJ1");
        panneau_info_joueur.add(lb_J1_nbDesint, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        panneau_info_joueur.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 280, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel5.setText("Joueur 2 :");
        panneau_info_joueur.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel6.setText("Couleur :");
        panneau_info_joueur.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel7.setText("Désintégrateurs : ");
        panneau_info_joueur.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));

        lb_J2_nom.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lb_J2_nom.setText("Nomjoueur2");
        panneau_info_joueur.add(lb_J2_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, -1, -1));

        lb_J2_couleur.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lb_J2_couleur.setText("CouleurJoueur2");
        panneau_info_joueur.add(lb_J2_couleur, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, -1, -1));

        lb_J2_nbdesint.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lb_J2_nbdesint.setText("nbDesintJ2");
        panneau_info_joueur.add(lb_J2_nbdesint, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Informations joueurs");
        panneau_info_joueur.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        getContentPane().add(panneau_info_joueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 210, 320, 270));

        panneau_info_partie.setBackground(new java.awt.Color(0, 153, 153));
        panneau_info_partie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Informations jeu");
        panneau_info_partie.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel9.setText("Joueur courant : ");
        panneau_info_partie.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        lb_Jcourant.setText("nomJoueur");
        panneau_info_partie.add(lb_Jcourant, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        msg.setColumns(20);
        msg.setRows(5);
        message.setViewportView(msg);

        panneau_info_partie.add(message, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 300, -1));

        getContentPane().add(panneau_info_partie, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 490, 320, 190));

        butt_C0.setText("1");
        butt_C0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C0ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C0, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        butt_C1.setText("2");
        butt_C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C1ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C1, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 70, -1, -1));

        butt_C2.setText("3");
        butt_C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C2ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C2, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 70, -1, -1));

        butt_C3.setText("4");
        butt_C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C3ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 70, -1, -1));

        butt_C4.setText("5");
        butt_C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C4ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(434, 70, -1, -1));

        butt_C5.setText("6");
        butt_C5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C5ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, -1, -1));

        butt_C6.setText("7");
        butt_C6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_C6ActionPerformed(evt);
            }
        });
        getContentPane().add(butt_C6, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 70, -1, -1));

        setBounds(0, 0, 1081, 713);
    }// </editor-fold>//GEN-END:initComponents

    private void saisie_nomJ2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saisie_nomJ2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_saisie_nomJ2ActionPerformed

    private void butt_C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C1ActionPerformed
        jouerDansColonne(1);
        if (plateau.colonneRemplie(1) == true) {
            butt_C1.setEnabled(false);
        }
        JoueurSuivant();

    }//GEN-LAST:event_butt_C1ActionPerformed

    private void butt_C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C4ActionPerformed
        jouerDansColonne(4);
        if (plateau.colonneRemplie(4) == true) {
            butt_C4.setEnabled(false);
        }

        JoueurSuivant();    }//GEN-LAST:event_butt_C4ActionPerformed

    private void butt_C6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C6ActionPerformed
        jouerDansColonne(6);
        if (plateau.colonneRemplie(6) == true) {
            butt_C6.setEnabled(false);
        }
        JoueurSuivant();    }//GEN-LAST:event_butt_C6ActionPerformed

    private void boutton_demarrer_partieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutton_demarrer_partieActionPerformed
        panneau_info_joueur.setVisible(true);
        panneau_info_partie.setVisible(true);
        initialiserPartie();
        panneau_grille.repaint();
        boutton_demarrer_partie.setEnabled(false);

    }//GEN-LAST:event_boutton_demarrer_partieActionPerformed

    private void saisie_nomJ1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saisie_nomJ1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saisie_nomJ1ActionPerformed

    private void butt_C0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C0ActionPerformed
        jouerDansColonne(0);
        if (plateau.colonneRemplie(0) == true) {
            butt_C0.setEnabled(false);
        }
        JoueurSuivant();    }//GEN-LAST:event_butt_C0ActionPerformed

    private void butt_C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C2ActionPerformed
        jouerDansColonne(2);
        if (plateau.colonneRemplie(2) == true) {
            butt_C2.setEnabled(false);
        }
        JoueurSuivant();    }//GEN-LAST:event_butt_C2ActionPerformed

    private void butt_C5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C5ActionPerformed
        jouerDansColonne(5);
        if (plateau.colonneRemplie(5) == true) {
            butt_C5.setEnabled(false);
        }
        JoueurSuivant();
    }//GEN-LAST:event_butt_C5ActionPerformed

    private void butt_C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_C3ActionPerformed
        jouerDansColonne(3);
        if (plateau.colonneRemplie(3) == true) {
            butt_C3.setEnabled(false);
        }
        JoueurSuivant();
    }//GEN-LAST:event_butt_C3ActionPerformed
    /**
     * JoueurSuivant donne le prochain joueur a jouer
     *
     * @return le joueur
     */

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetreDeJeu().setVisible(true);
            }
        });
    }

    public void attribuerCouleurAuxJoueurs() {
        boolean choix;
        Random c = new Random();
        choix = c.nextBoolean();
        if (choix == true) {
            listeJoueurs[0].affecterCouleur("rouge");
            listeJoueurs[1].affecterCouleur("jaune");
        } else {
            listeJoueurs[0].affecterCouleur("jaune");
            listeJoueurs[1].affecterCouleur("rouge");
        }

    }

    /**
     * creerEtAffecterJeton
     *
     * @param joueurCourant créer 30 jetons de la couleur du joueur en paramètre
     * et les ajoute à sa réserve
     */
    public void creerEtAffecterJeton(Joueur joueurCourant) {
        for (int i = 0; i < 31; i++) {
            jeton j = new jeton(joueurCourant.lireCouleur());
            joueurCourant.ajouterJeton(j);
            i += 1;
        }
    }

    public void placerTrousNoirsEtDesintegrateurs() {

        Random r = new Random();
        int compt_d = 5;
        int compt_t = 5;
        //placement Désintégrateurs et Trous noirs
        for (int i = 0; i < 3; i++) {
            int ligne = r.nextInt(6);
            int colonne = r.nextInt(7);
            if (plateau.presenceDesintegrateur(ligne, colonne) == false || plateau.presenceTrouNoir(ligne, colonne) == false) {
                plateau.placerTrouNoir(ligne, colonne);
                compt_t -= 1;
                plateau.placerDesintegrateur(ligne, colonne);
                compt_d -= 1;
            } else {
                compt_d = compt_d;
                compt_t = compt_t;

            }
        }

        //placement Trous noirs 
        while (compt_d != 0 && compt_t != 0) {
            for (int i = 0; i < 2; i++) {
                int ligne = r.nextInt(6);
                int colonne = r.nextInt(7);
                while (plateau.presenceDesintegrateur(ligne, colonne) != false || plateau.presenceTrouNoir(ligne, colonne) != false) {
                    ligne = r.nextInt(6);
                    colonne = r.nextInt(7);
                }
                plateau.placerTrouNoir(ligne, colonne);
                compt_t -= 1;
            }
        }
        // placement Déseintégrateurs 
        for (int i = 0; i < 2; i++) {
            int ligne = r.nextInt(6);
            int colonne = r.nextInt(7);
            while (plateau.presenceDesintegrateur(ligne, colonne) != false || plateau.presenceTrouNoir(ligne, colonne) != false) {
                ligne = r.nextInt(6);
                colonne = r.nextInt(7);
            }
            plateau.placerDesintegrateur(ligne, colonne);
            compt_d -= 1;
        }

    }

    public void initialiserPartie() {
        String nomJoueur1 = saisie_nomJ1.getText();
        Joueur j1 = new Joueur(nomJoueur1);

        String nomJoueur2 = saisie_nomJ2.getText();
        Joueur j2 = new Joueur(nomJoueur2);

        listeJoueurs[0] = j1;
        listeJoueurs[1] = j2;

        attribuerCouleurAuxJoueurs();

        System.out.println(j1.nom + " est de couleur " + j1.couleur);
        System.out.println(j2.nom + " est de couleur " + j2.couleur);

        lb_J1_nom.setText(nomJoueur1);
        jl_J1_couleur.setText(j1.couleur);
        lb_J1_nbDesint.setText(j1.nbDesintegrateur() + "");
        lb_J2_nom.setText(nomJoueur2);
        lb_J2_couleur.setText(j2.couleur);
        lb_J2_nbdesint.setText(j2.nbDesintegrateur() + "");

        creerEtAffecterJeton(j1);
        creerEtAffecterJeton(j2);

        Random r = new Random();
        boolean le_premier = r.nextBoolean();
        if (le_premier) {
            joueurCourant = listeJoueurs[0];
            System.out.println("C'est au tour de " + listeJoueurs[0]);
        } else {
            joueurCourant = listeJoueurs[1];
            System.out.println("C'est au tour de " + listeJoueurs[1]);
        }
        lb_Jcourant.setText(joueurCourant.nom);

        placerTrousNoirsEtDesintegrateurs();
    }

    public boolean jouerDansColonne(int indice_colonne) {
        boolean resultatAction;

        resultatAction = plateau.colonneRemplie(indice_colonne);
        plateau.ajouterJetonDansColonne(joueurCourant, indice_colonne);
        panneau_grille.repaint();

        lb_J1_nbDesint.setText(listeJoueurs[0].nbDesintegrateur() + "");
        lb_J2_nbdesint.setText(listeJoueurs[1].nbDesintegrateur() + "");

        boolean vict_J1 = plateau.etreGagnantePourCouleur(listeJoueurs[0].lireCouleur());
        boolean vict_J2 = plateau.etreGagnantePourCouleur(listeJoueurs[1].lireCouleur());
        if (vict_J1 == true && vict_J2 == false) {
            msg.setText("Victoire de " + listeJoueurs[0].nom + "relancer la fenêtre pour rejouer");
            butt_C0.setEnabled(false);
            butt_C1.setEnabled(false);
            butt_C2.setEnabled(false);
            butt_C3.setEnabled(false);
            butt_C4.setEnabled(false);
            butt_C5.setEnabled(false);
            butt_C6.setEnabled(false);
            
        }
        if (vict_J1 == false && vict_J2 == true) {
            msg.setText("Victoire de " + listeJoueurs[1].nom + "relancer la fenêtre pour rejouer");
            butt_C0.setEnabled(false);
            butt_C1.setEnabled(false);
            butt_C2.setEnabled(false);
            butt_C3.setEnabled(false);
            butt_C4.setEnabled(false);
            butt_C5.setEnabled(false);
            butt_C6.setEnabled(false);
            

        }
        if (vict_J1 == true && vict_J2 == true) {
            if (joueurCourant == listeJoueurs[0]) {
                msg.setText("Victoire de " + listeJoueurs[1].nom + ", (faute de jeu de l'autre joueur)" + "relancer la fenêtre pour rejouer");
                butt_C0.setEnabled(false);
                butt_C1.setEnabled(false);
                butt_C2.setEnabled(false);
                butt_C3.setEnabled(false);
                butt_C4.setEnabled(false);
                butt_C5.setEnabled(false);
                butt_C6.setEnabled(false);
                
            } else {
                msg.setText("Victoire de " + listeJoueurs[0].nom + ", (faute de jeu de l'autre joueur)"+ "relancer la fenêtre pour rejouer");
                butt_C0.setEnabled(false);
                butt_C1.setEnabled(false);
                butt_C2.setEnabled(false);
                butt_C3.setEnabled(false);
                butt_C4.setEnabled(false);
                butt_C5.setEnabled(false);
                butt_C6.setEnabled(false);
                
            }
        }

        if (resultatAction == true) {
            return true;
        } else {
            return false;
        }

    }

    public void JoueurSuivant() {
        if (joueurCourant == listeJoueurs[0]) {
            joueurCourant = listeJoueurs[1];
        } else {
            joueurCourant = listeJoueurs[0];
        }
        lb_Jcourant.setText(joueurCourant.nom);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutton_demarrer_partie;
    private javax.swing.JButton butt_C0;
    private javax.swing.JButton butt_C1;
    private javax.swing.JButton butt_C2;
    private javax.swing.JButton butt_C3;
    private javax.swing.JButton butt_C4;
    private javax.swing.JButton butt_C5;
    private javax.swing.JButton butt_C6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jl_J1_couleur;
    private javax.swing.JLabel lb_J1_nbDesint;
    private javax.swing.JLabel lb_J1_nom;
    private javax.swing.JLabel lb_J2_couleur;
    private javax.swing.JLabel lb_J2_nbdesint;
    private javax.swing.JLabel lb_J2_nom;
    private javax.swing.JLabel lb_Jcourant;
    private javax.swing.JScrollPane message;
    private javax.swing.JTextArea msg;
    private javax.swing.JLabel nom_joueur1;
    private javax.swing.JLabel nom_joueur2;
    private javax.swing.JPanel panneau_creation_partie;
    private javax.swing.JPanel panneau_grille;
    private javax.swing.JPanel panneau_info_joueur;
    private javax.swing.JPanel panneau_info_partie;
    private javax.swing.JTextField saisie_nomJ1;
    private javax.swing.JTextField saisie_nomJ2;
    // End of variables declaration//GEN-END:variables
}
